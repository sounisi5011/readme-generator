{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;AAAA,6BAA6B;AAE7B,SAAgB,QAAQ,CAAC,KAAc;IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC;AACvD,CAAC;AAFD,4BAEC;AAED;;;GAGG;AACH,SAAgB,qBAAqB,CAAC,GAAW;IAC7C,OAAO,wDAAwD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9E,CAAC;AAFD,sDAEC;AAED,SAAgB,UAAU,CAAC,KAAc;IACrC,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC;AAClD,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CAAQ,IAAsB;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACjC,CAAC;AAFD,4BAEC;AAED,SAAgB,UAAU,CAAC,UAAqB;IAC5C,OAAO,UAAU;SACZ,GAAG,CAAC,QAAQ,CAAC,EAAE,CACZ,OAAO,QAAQ,KAAK,QAAQ,IAAI,qBAAqB,CAAC,QAAQ,CAAC;QAC3D,CAAC,CAAC,IAAI,QAAQ,EAAE;QAChB,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,GAAG,CACjE;SACA,IAAI,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC;AARD,gCAQC","sourcesContent":["import * as util from 'util';\n\nexport function isObject(value: unknown): value is Record<PropertyKey, unknown> {\n    return typeof value === 'object' && value !== null;\n}\n\n/**\n * Check if a string is a valid ECMAScript 2018 identifier name\n * @see https://www.ecma-international.org/ecma-262/9.0/index.html#prod-IdentifierName\n */\nexport function isValidIdentifierName(str: string): boolean {\n    return /^[\\p{ID_Start}$_][\\p{ID_Continue}$\\u{200C}\\u{200D}]*$/u.test(str);\n}\n\nexport function typeString(value: unknown): string {\n    return value === null ? 'null' : typeof value;\n}\n\nexport function lastItem<TItem>(list: readonly TItem[]): TItem | undefined {\n    return list[list.length - 1];\n}\n\nexport function propString(objectPath: unknown[]): string {\n    return objectPath\n        .map(propName =>\n            typeof propName === 'string' && isValidIdentifierName(propName)\n                ? `.${propName}`\n                : `[${util.inspect(propName, { breakLength: Infinity })}]`\n        )\n        .join('');\n}\n"]}
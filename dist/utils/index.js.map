{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utils/index.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAM/B,SAAgB,QAAQ,CAAC,KAAc;IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC;AACvD,CAAC;AAFD,4BAEC;AAED,SAAgB,gBAAgB,CAAC,KAAc;IAC3C,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,EAAE,CAAC;AACrD,CAAC;AAFD,4CAEC;AAED;;;GAGG;AACH,SAAgB,qBAAqB,CAAC,GAAW;IAC7C,OAAO,wDAAwD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9E,CAAC;AAFD,sDAEC;AAED,SAAgB,UAAU,CAAC,KAAc;IACrC,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC;AAClD,CAAC;AAFD,gCAEC;AAED,SAAgB,MAAM,CAAC,KAAiC,EAAE,cAA+B,CAAC;IACtF,MAAM,IAAI,GAAI,KAAK,CAAC,OAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC1E,MAAM,SAAS,GAAG,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IAC1F,OAAO,IAAI,CAAC,OAAO,CACf,yBAAyB,EACzB,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CACpB,QAAQ;QACJ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE;QACpD,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAChE,CAAC;AACN,CAAC;AAVD,wBAUC;AAED,SAAgB,QAAQ,CAAQ,IAAsB;IAClD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACjC,CAAC;AAFD,4BAEC;AAED,SAAgB,YAAY,CAAC,KAAc,EAAE,EAAE,KAAK,KAAyB,EAAE;IAC3E,OAAO,cAAO,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC5D,CAAC;AAFD,oCAEC;AAED,SAAgB,UAAU,CAAC,UAAqB;IAC5C,OAAO,UAAU;SACZ,GAAG,CAAC,QAAQ,CAAC,EAAE,CACZ,OAAO,QAAQ,KAAK,QAAQ,IAAI,qBAAqB,CAAC,QAAQ,CAAC;QAC3D,CAAC,CAAC,IAAI,QAAQ,EAAE;QAChB,CAAC,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACtC;SACA,IAAI,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC;AARD,gCAQC;AAED,SAAgB,aAAa,CAAI,EAAoB;IACjD,IAAI,KAA6B,CAAC;IAClC,OAAO,KAAK,IAAI,EAAE;QACd,IAAI,CAAC,KAAK;YAAE,KAAK,GAAG,EAAE,EAAE,CAAC;QACzB,OAAO,MAAM,KAAK,CAAC;IACvB,CAAC,CAAC;AACN,CAAC;AAND,sCAMC","sourcesContent":["import { inspect } from 'util';\n\nexport type PromiseValue<T extends Promise<unknown>> = T extends Promise<infer P> ? P : never;\n\nexport type isArray = (value: unknown) => value is readonly unknown[];\n\nexport function isObject(value: unknown): value is Record<PropertyKey, unknown> {\n    return typeof value === 'object' && value !== null;\n}\n\nexport function isNonEmptyString(value: unknown): value is string {\n    return typeof value === 'string' && value !== '';\n}\n\n/**\n * Check if a string is a valid ECMAScript 2018 identifier name\n * @see https://www.ecma-international.org/ecma-262/9.0/index.html#prod-IdentifierName\n */\nexport function isValidIdentifierName(str: string): boolean {\n    return /^[\\p{ID_Start}$_][\\p{ID_Continue}$\\u{200C}\\u{200D}]*$/u.test(str);\n}\n\nexport function typeString(value: unknown): string {\n    return value === null ? 'null' : typeof value;\n}\n\nexport function indent(value: string | readonly string[], indentValue: number | string = 2): string {\n    const text = (Array.isArray as isArray)(value) ? value.join('\\n') : value;\n    const indentStr = typeof indentValue === 'number' ? ' '.repeat(indentValue) : indentValue;\n    return text.replace(\n        /(^|\\r\\n?|\\n)([^\\r\\n]?)/g,\n        (_, lbChar, nextChar) =>\n            nextChar\n                ? `${String(lbChar)}${indentStr}${String(nextChar)}`\n                : `${String(lbChar)}${indentStr.replace(/\\s+$/, '')}`,\n    );\n}\n\nexport function lastItem<TItem>(list: readonly TItem[]): TItem | undefined {\n    return list[list.length - 1];\n}\n\nexport function inspectValue(value: unknown, { depth }: { depth?: number } = {}): string {\n    return inspect(value, { breakLength: Infinity, depth });\n}\n\nexport function propString(objectPath: unknown[]): string {\n    return objectPath\n        .map(propName =>\n            typeof propName === 'string' && isValidIdentifierName(propName)\n                ? `.${propName}`\n                : `[${inspectValue(propName)}]`\n        )\n        .join('');\n}\n\nexport function cachedPromise<T>(fn: () => Promise<T>): () => Promise<T> {\n    let cache: Promise<T> | undefined;\n    return async () => {\n        if (!cache) cache = fn();\n        return await cache;\n    };\n}\n"]}
{"version":3,"file":"bent.js","sourceRoot":"","sources":["../../src/utils/bent.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAE/B,wBAAqC;AAE9B,KAAK,UAAU,cAAc,CAAI,KAAQ;IAC5C,IAAI,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IAC5C,IAAI,CAAC,WAAQ,CAAC,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC;IAEnC,IACI,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa,IAAI,OAAO,KAAK,CAAC,UAAU,KAAK,QAAQ;WAC7E,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,WAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAChE;QACE,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE;YACjC,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI;SAChC,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;QACrC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE;YACjC,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,SAAS;SACnB,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,IAAI,CAAC;QAClB,IAAI,cAAc,GAAG,SAAS,CAAC;QAE/B,IAAI,OAAO,KAAK,CAAC,WAAW,KAAK,UAAU;YAAE,OAAO,KAAK,CAAC,WAAW,CAAC;QACtE,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;YAClC,IAAI;gBACA,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACvE,cAAc,GAAG,cAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACxC;YAAC,WAAM;gBACJ,EAAE;aACL;YACD,OAAO,KAAK,CAAC,IAAI,CAAC;SACrB;QAED,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE;YACpC,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE;gBACH,QAAQ,KAAK,CAAC,UAAU,EAAE;gBAC1B,SAAM,CAAC;oBACH,GAAG,CACC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAC5C,gEAAgE,CAAC,IAAI,CAAC,IAAI,CAAC,CAC9E,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CACnE,GAAG,IAAI,KAAK,MAAM,CAAC,KAAK,CAAC,EAAE,CAC9B,CACJ;oBACD,OAAO;oBACP,SAAM,CAAC,cAAc,CAAC;iBACzB,CAAC;aACL,CAAC,IAAI,CAAC,IAAI,CAAC;SACf,CAAC,CAAC;KACN;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AA1DD,wCA0DC","sourcesContent":["import { inspect } from 'util';\n\nimport { indent, isObject } from '.';\n\nexport async function bentErrorFixer<T>(error: T): Promise<T> {\n    if (!(error instanceof Error)) return error;\n    if (!isObject(error)) return error;\n\n    if (\n        error.constructor.name === 'StatusError' && typeof error.statusCode === 'number'\n        && typeof error.text === 'function' && isObject(error.headers)\n    ) {\n        Object.defineProperty(error, 'name', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: error.constructor.name,\n        });\n\n        const errorBody = await error.text();\n        Object.defineProperty(error, 'body', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: errorBody,\n        });\n        delete error.text;\n        let messageBodyStr = errorBody;\n\n        if (typeof error.arrayBuffer === 'function') delete error.arrayBuffer;\n        if (typeof error.json === 'function') {\n            try {\n                Object.defineProperty(error, 'body', { value: JSON.parse(errorBody) });\n                messageBodyStr = inspect(error.body);\n            } catch {\n                //\n            }\n            delete error.json;\n        }\n\n        Object.defineProperty(error, 'message', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: [\n                `HTTP ${error.statusCode}`,\n                indent([\n                    ...(\n                        Object.entries(error.headers).filter(([name]) =>\n                            /^x-(?!(?:frame-options|content-type-options|xss-protection)$)/i.test(name)\n                        ).sort(([a], [b]) => a < b ? -1 : a > b ? 1 : 0).map(([name, value]) =>\n                            `${name}: ${String(value)}`\n                        )\n                    ),\n                    `body:`,\n                    indent(messageBodyStr),\n                ]),\n            ].join('\\n'),\n        });\n    }\n\n    return error;\n}\n"]}
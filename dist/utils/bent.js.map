{"version":3,"file":"bent.js","sourceRoot":"","sources":["../../src/utils/bent.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAE/B,wBAAqC;AAErC,SAAS,OAAO,CAAC,GAAY,EAAE,QAAqB,EAAE,KAAc,EAAE,UAAU,GAAG,IAAI;IACnF,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE;QACjC,YAAY,EAAE,IAAI;QAClB,UAAU;QACV,QAAQ,EAAE,IAAI;QACd,KAAK;KACR,CAAC,CAAC;AACP,CAAC;AAED,SAAS,eAAe,CACpB,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAIpC;IAED,OAAO;QACH,QAAQ,UAAU,EAAE;QACpB,SAAM,CAAC;YACH,GAAG,CACC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;iBAClB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,gEAAgE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/F,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9C,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,KAAK,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAC3D;YACD,OAAO;YACP,SAAM,CAAC,cAAc,CAAC;SACzB,CAAC;KACL,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,CAAC;AAEM,KAAK,UAAU,cAAc,CAAC,KAAc;IAC/C,IACI,KAAK,YAAY,KAAK,IAAI,WAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa;WAClF,OAAO,KAAK,CAAC,UAAU,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,WAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EACxG;QACE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEtD,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;QACrC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAClC,OAAO,KAAK,CAAC,IAAI,CAAC;QAClB,IAAI,cAAc,GAAG,SAAS,CAAC;QAE/B,IAAI,OAAO,KAAK,CAAC,WAAW,KAAK,UAAU;YAAE,OAAO,KAAK,CAAC,WAAW,CAAC;QACtE,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;YAClC,IAAI;gBACA,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACvE,cAAc,GAAG,cAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACxC;YAAC,WAAM;gBACJ,EAAE;aACL;YACD,OAAO,KAAK,CAAC,IAAI,CAAC;SACrB;QAED,OAAO,CACH,KAAK,EACL,SAAS,EACT,eAAe,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,cAAc,EAAE,CAAC,EACzF,KAAK,CACR,CAAC;KACL;IAED,2DAA2D;IAC3D,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACjC,CAAC;AAjCD,wCAiCC","sourcesContent":["import { inspect } from 'util';\n\nimport { indent, isObject } from '.';\n\nfunction setProp(obj: unknown, propName: PropertyKey, value: unknown, enumerable = true): void {\n    Object.defineProperty(obj, propName, {\n        configurable: true,\n        enumerable,\n        writable: true,\n        value,\n    });\n}\n\nfunction genErrerMessage(\n    { statusCode, headers, messageBodyStr }: {\n        statusCode: number;\n        headers: Record<PropertyKey, unknown>;\n        messageBodyStr: string;\n    },\n): string {\n    return [\n        `HTTP ${statusCode}`,\n        indent([\n            ...(\n                Object.entries(headers)\n                    .filter(([name]) => /^x-(?!(?:frame-options|content-type-options|xss-protection)$)/i.test(name))\n                    .sort(([a], [b]) => a < b ? -1 : a > b ? 1 : 0)\n                    .map(([name, value]) => `${name}: ${String(value)}`)\n            ),\n            `body:`,\n            indent(messageBodyStr),\n        ]),\n    ].join('\\n');\n}\n\nexport async function bentErrorFixer(error: unknown): Promise<never> {\n    if (\n        error instanceof Error && isObject(error) && error.constructor.name === 'StatusError'\n        && typeof error.statusCode === 'number' && typeof error.text === 'function' && isObject(error.headers)\n    ) {\n        setProp(error, 'name', error.constructor.name, false);\n\n        const errorBody = await error.text();\n        setProp(error, 'body', errorBody);\n        delete error.text;\n        let messageBodyStr = errorBody;\n\n        if (typeof error.arrayBuffer === 'function') delete error.arrayBuffer;\n        if (typeof error.json === 'function') {\n            try {\n                Object.defineProperty(error, 'body', { value: JSON.parse(errorBody) });\n                messageBodyStr = inspect(error.body);\n            } catch {\n                //\n            }\n            delete error.json;\n        }\n\n        setProp(\n            error,\n            'message',\n            genErrerMessage({ statusCode: error.statusCode, headers: error.headers, messageBodyStr }),\n            false,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/return-await\n    return Promise.reject(error);\n}\n"]}
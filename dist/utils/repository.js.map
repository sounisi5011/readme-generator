{"version":3,"file":"repository.js","sourceRoot":"","sources":["../../src/utils/repository.ts"],"names":[],"mappings":"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","sourcesContent":["import { inspect } from 'util';\n\nimport { spawn as gitSpawn } from '@npmcli/git';\nimport gitLinesToRevs from '@npmcli/git/lib/lines-to-revs';\nimport bent from 'bent';\nimport type GitHost from 'hosted-git-info';\n\nimport { cachedPromise, indent, inspectValue, isNonEmptyString, isObject } from '.';\n\nfunction npmcliGitErrorFixer<T>(error: T): T {\n    if (!(error instanceof Error)) return error;\n    if (!isObject(error)) return error;\n\n    /**\n     * @see https://github.com/npm/promise-spawn/blob/v1.2.0/index.js#L38-L43\n     */\n    if (\n        typeof error.cmd === 'string'\n        && Array.isArray(error.args)\n        && typeof error.stderr === 'string'\n        && typeof error.code === 'number'\n    ) {\n        error.message += [\n            ``,\n            indent([\n                `$ ${error.cmd} ${error.args.join(' ')}`,\n                ``,\n                indent(error.stderr.replace(/[\\r\\n]+$/, ''), '> '),\n                ``,\n                `exited with error code: ${error.code}`,\n            ]),\n        ].join('\\n');\n    }\n\n    return error;\n}\n\nexport async function bentErrorFixer<T>(error: T): Promise<T> {\n    if (!(error instanceof Error)) return error;\n    if (!isObject(error)) return error;\n\n    if (\n        error.constructor.name === 'StatusError' && /^Incorrect statusCode: [0-9]+$/.test(error.message)\n        && typeof error.statusCode === 'number' && typeof error.text === 'function' && isObject(error.headers)\n    ) {\n        Object.defineProperty(error, 'name', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: error.constructor.name,\n        });\n\n        const errorBody = await error.text();\n        Object.defineProperty(error, 'body', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: errorBody,\n        });\n        delete error.text;\n        let messageBodyStr = errorBody;\n\n        if (typeof error.arrayBuffer === 'function') delete error.arrayBuffer;\n        if (typeof error.json === 'function') {\n            try {\n                Object.defineProperty(error, 'body', { value: JSON.parse(errorBody) });\n                messageBodyStr = inspect(error.body);\n            } catch {\n                //\n            }\n            delete error.json;\n        }\n\n        Object.defineProperty(error, 'message', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: [\n                `HTTP ${error.statusCode}`,\n                indent([\n                    ...(\n                        Object.entries(error.headers).filter(([name]) =>\n                            /^x-(?!(?:frame-options|content-type-options|xss-protection)$)/i.test(name)\n                        ).sort(([a], [b]) => a < b ? -1 : a > b ? 1 : 0).map(([name, value]) =>\n                            `${name}: ${String(value)}`\n                        )\n                    ),\n                    `body:`,\n                    indent(messageBodyStr),\n                ]),\n            ].join('\\n'),\n        });\n    }\n\n    return error;\n}\n\n/**\n * @see https://developer.github.com/v3/\n */\nconst initGithubApi = cachedPromise(async () => {\n    if (!isNonEmptyString(process.env.GITHUB_TOKEN)) {\n        throw new Error(`Environment variable \"GITHUB_TOKEN\" is not defined`);\n    }\n\n    return bent<bent.BentResponse>('https://api.github.com', {\n        /** @see https://docs.github.com/en/rest/overview/resources-in-the-rest-api#authentication */\n        'Authorization': `token ${process.env.GITHUB_TOKEN}`,\n        /** @see https://developer.github.com/v3/#current-version */\n        'Accept': 'application/vnd.github.v3+json',\n        /** @see https://developer.github.com/v3/#user-agent-required */\n        'User-Agent': 'sounisi5011--readme-generator (https://github.com/sounisi5011/readme-generator)',\n    });\n});\n\nexport class GitTag {\n    #gitInfo: GitHost;\n    #tagName: string;\n    #sha1Record:\n        | { readonly tag: string; commit: string }\n        | { readonly tag: string; commit: undefined }\n        | { readonly tag: undefined; commit: string };\n\n    constructor(\n        gitInfo: GitHost,\n        tagName: string,\n        sha1Record:\n            | Readonly<{ tag: string; commit: string }>\n            | Readonly<{ tag: string }>\n            | Readonly<{ commit: string }>,\n    ) {\n        this.#gitInfo = gitInfo;\n        this.#tagName = tagName;\n        this.#sha1Record = { tag: undefined, commit: undefined, ...sha1Record };\n    }\n\n    get tagName(): string {\n        return this.#tagName;\n    }\n\n    get tagSHA1(): string | undefined {\n        return this.#sha1Record.tag;\n    }\n\n    get commitSHA1(): string | undefined {\n        return this.#sha1Record.commit;\n    }\n\n    async fetchCommitSHA1(): Promise<string> {\n        const sha1Record = this.#sha1Record;\n\n        if (sha1Record.commit !== undefined) {\n            return sha1Record.commit;\n        }\n\n        return (\n            this.#sha1Record.commit = await (\n                this.fetchCommitSHA1FromLocal()\n                    .catch(async () => await this.fetchCommitSHA1FromAPI(sha1Record.tag))\n            )\n        );\n    }\n\n    private async fetchCommitSHA1FromLocal(): Promise<string> {\n        const { stdout } = await gitSpawn(['show-ref', this.#tagName, '--dereference']);\n\n        const peeledTagMatch = /^([0-9a-f]+)(?:(?![\\r\\n])\\s)+[^\\r\\n]+\\^\\{\\}$/im.exec(stdout);\n        if (peeledTagMatch) {\n            return peeledTagMatch[1];\n        }\n\n        const lightWeightTagMatch = /^([0-9a-f]+)(?:(?![\\r\\n])\\s)+[^\\r\\n]+$/im.exec(stdout);\n        if (lightWeightTagMatch) {\n            return lightWeightTagMatch[1];\n        }\n\n        throw new Error(`commit SHA-1 hash was not found`);\n    }\n\n    private async fetchCommitSHA1FromAPI(tagSHA1: string): Promise<string> {\n        const repoType = this.#gitInfo.type;\n\n        if (repoType === 'github') {\n            return await this.fetchCommitSHA1FromGithubAPI(tagSHA1);\n        } else if (repoType === 'gitlab') {\n            // TODO\n        } else if (repoType === 'bitbucket') {\n            // TODO\n        } else if (repoType === 'gist') {\n            // TODO\n        }\n\n        throw new Error(`The API to get tag data of type \"${repoType}\" is not yet supported`);\n    }\n\n    private async fetchCommitSHA1FromGithubAPI(tagSHA1: string): Promise<string> {\n        const { user: repoUser, project: repoProject } = this.#gitInfo;\n\n        const githubApi = await initGithubApi();\n        /**\n         * @see https://developer.github.com/v3/git/tags/#get-a-tag\n         * Note: Supposedly, GitHub's username and repository name are URL-Safe.\n         */\n        const stream = await githubApi(`/repos/${repoUser}/${repoProject}/git/tags/${tagSHA1}`)\n            .catch(async error => {\n                throw await bentErrorFixer(error);\n            });\n\n        const data = await stream.json();\n        if (!isObject(data)) {\n            throw new Error(`The GitHub API returned a invalid JSON value: ${inspectValue(data, { depth: 0 })}`);\n        }\n        if (data.sha !== tagSHA1) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"sha\" property: ${\n                    inspectValue(data.sha, { depth: 0 })\n                }`,\n            );\n        }\n        if (!isObject(data.object)) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"object\" property: ${\n                    inspectValue(data.object, { depth: 0 })\n                }`,\n            );\n        }\n        if (!(typeof data.object.sha === 'string')) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"object.sha\" property: ${\n                    inspectValue(data.object.sha, { depth: 0 })\n                }`,\n            );\n        }\n\n        return data.object.sha;\n    }\n}\n\nexport class ReleasedVersions extends Map<string, GitTag> {\n    private constructor(entries?: ReadonlyArray<readonly [string, GitTag]>) {\n        super(entries);\n    }\n\n    static async fetch(gitInfo: GitHost): Promise<ReleasedVersions> {\n        try {\n            const tagLines = await this.fetchTagsFromGit(gitInfo);\n            return new ReleasedVersions(this.gitTagEntries(gitInfo, tagLines, false));\n        } catch (gitError) {\n            try {\n                const tagLines = await this.fetchTagsFromAPI(gitInfo);\n                return new ReleasedVersions(this.gitTagEntries(gitInfo, tagLines, true));\n            } catch {\n                throw npmcliGitErrorFixer(gitError);\n            }\n        }\n    }\n\n    private static gitTagEntries(\n        gitInfo: GitHost,\n        tagLines: readonly string[],\n        isTagsOnly: boolean,\n    ): Array<[string, GitTag]> {\n        const { versions } = gitLinesToRevs(tagLines);\n\n        return Object.entries(versions).map(([version, tagData]) => {\n            const { ref: tagName } = tagData;\n            if (isTagsOnly) {\n                const { sha: tagSha1 } = tagData;\n                return [version, new GitTag(gitInfo, tagName, { tag: tagSha1 })];\n            } else {\n                const { sha: commitSha1 } = tagData;\n\n                let tagSha1: string | undefined;\n                const { rawRef } = tagData;\n                for (const line of tagLines) {\n                    const match = /^([0-9a-f]+)(?:(?![\\r\\n])\\s)+([^\\r\\n]+)$/i.exec(line);\n                    if (match && match[1] !== commitSha1 && match[2] === rawRef) {\n                        tagSha1 = match[1];\n                        break;\n                    }\n                }\n\n                return [version, new GitTag(gitInfo, tagName, { tag: tagSha1, commit: commitSha1 })];\n            }\n        });\n    }\n\n    private static async fetchTagsFromGit(gitInfo: GitHost): Promise<string[]> {\n        const repo = gitInfo.git({ noCommittish: true }) || gitInfo.https({ noGitPlus: true, noCommittish: true });\n        const { stdout } = await gitSpawn(['ls-remote', '--tags', repo]);\n        return stdout.trim().split('\\n');\n    }\n\n    private static async fetchTagsFromAPI(gitInfo: GitHost): Promise<string[]> {\n        if (gitInfo.type === 'github') {\n            return await this.fetchTagsFromGithubAPI(gitInfo);\n        } else if (gitInfo.type === 'gitlab') {\n            // TODO\n        } else if (gitInfo.type === 'bitbucket') {\n            // TODO\n        } else if (gitInfo.type === 'gist') {\n            // TODO\n        }\n        throw new Error(`The API to get tags of type \"${gitInfo.type}\" is not yet supported`);\n    }\n\n    private static async fetchTagsFromGithubAPI(gitInfo: GitHost): Promise<string[]> {\n        const githubApi = await initGithubApi();\n        /**\n         * @see https://developer.github.com/v3/git/refs/\n         * @see https://stackoverflow.com/a/18999865/4907315\n         * Note: Supposedly, GitHub's username and repository name are URL-Safe.\n         */\n        const stream = await githubApi(`/repos/${gitInfo.user}/${gitInfo.project}/git/refs/tags`)\n            .catch(async error => {\n                throw await bentErrorFixer(error);\n            });\n        const data = await stream.json();\n        if (!Array.isArray(data)) {\n            throw new Error(`The GitHub API returned a invalid JSON value: ${inspectValue(data, { depth: 0 })}`);\n        }\n        return data.map((dataItem, index) => {\n            let errorMessage = `The GitHub API returned a invalid JSON value at index ${index}: ${\n                inspectValue(dataItem, { depth: 0 })\n            }`;\n            do {\n                if (!isObject(dataItem)) break;\n                const { ref, object } = dataItem;\n                if (!(typeof ref === 'string' && isObject(object))) break;\n                const { sha } = object;\n                if (!(typeof sha === 'string')) {\n                    errorMessage = `The GitHub API returned a invalid JSON value at property [${index}].object: ${\n                        inspectValue(object, { depth: 0 })\n                    }`;\n                    break;\n                }\n                return `${sha}\\t${ref}`;\n            } while (false);\n            throw new Error(errorMessage);\n        });\n    }\n}\n"]}
{"version":3,"file":"repository.js","sourceRoot":"","sources":["../../src/utils/repository.ts"],"names":[],"mappings":"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","sourcesContent":["import { inspect } from 'util';\n\nimport { revs as gitRevs, spawn as gitSpawn } from '@npmcli/git';\nimport gitLinesToRevs from '@npmcli/git/lib/lines-to-revs';\nimport bent from 'bent';\nimport type GitHost from 'hosted-git-info';\n\nimport { indent, inspectValue, isNonEmptyString, isObject, PromiseValue } from '.';\n\ntype Versions = PromiseValue<ReturnType<typeof gitRevs>>['versions'];\n\nfunction npmcliGitErrorFixer<T>(error: T): T {\n    if (!(error instanceof Error)) return error;\n    if (!isObject(error)) return error;\n\n    /**\n     * @see https://github.com/npm/promise-spawn/blob/v1.2.0/index.js#L38-L43\n     */\n    if (\n        typeof error.cmd === 'string'\n        && Array.isArray(error.args)\n        && typeof error.stderr === 'string'\n        && typeof error.code === 'number'\n    ) {\n        error.message += [\n            ``,\n            indent([\n                `$ ${error.cmd} ${error.args.join(' ')}`,\n                ``,\n                indent(error.stderr.replace(/[\\r\\n]+$/, ''), '> '),\n                ``,\n                `exited with error code: ${error.code}`,\n            ]),\n        ].join('\\n');\n    }\n\n    return error;\n}\n\nasync function bentErrorFixer<T>(error: T): Promise<T> {\n    if (!(error instanceof Error)) return error;\n    if (!isObject(error)) return error;\n\n    if (\n        error.constructor.name === 'StatusError' && /^Incorrect statusCode: [0-9]+$/.test(error.message)\n        && typeof error.statusCode === 'number' && typeof error.text === 'function' && isObject(error.headers)\n    ) {\n        Object.defineProperty(error, 'name', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: error.constructor.name,\n        });\n\n        const errorBody = await error.text();\n        Object.defineProperty(error, 'body', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: errorBody,\n        });\n        delete error.text;\n        let messageBodyStr = errorBody;\n\n        if (typeof error.arrayBuffer === 'function') delete error.arrayBuffer;\n        if (typeof error.json === 'function') {\n            try {\n                Object.defineProperty(error, 'body', { value: JSON.parse(errorBody) });\n                messageBodyStr = inspect(error.body);\n            } catch {\n                //\n            }\n            delete error.json;\n        }\n\n        Object.defineProperty(error, 'message', {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: [\n                `HTTP ${error.statusCode}`,\n                indent([\n                    ...(\n                        Object.entries(error.headers).filter(([name]) =>\n                            /^x-(?!(?:frame-options|content-type-options|xss-protection)$)/i.test(name)\n                        ).sort(([a], [b]) => a < b ? -1 : a > b ? 1 : 0).map(([name, value]) =>\n                            `${name}: ${String(value)}`\n                        )\n                    ),\n                    `body:`,\n                    indent(messageBodyStr),\n                ]),\n            ].join('\\n'),\n        });\n    }\n\n    return error;\n}\n\n/**\n * @see https://developer.github.com/v3/\n */\nconst githubApi = bent(\n    isNonEmptyString(process.env.GITHUB_API_BASIC_AUTH_USER)\n    && isNonEmptyString(process.env.GITHUB_API_BASIC_AUTH_TOKEN)\n        ? `https://${process.env.GITHUB_API_BASIC_AUTH_USER}:${process.env.GITHUB_API_BASIC_AUTH_TOKEN}@api.github.com`\n        : 'https://api.github.com',\n    {\n        /** @see https://developer.github.com/v3/#current-version */\n        'Accept': 'application/vnd.github.v3+json',\n        /** @see https://developer.github.com/v3/#user-agent-required */\n        'User-Agent': 'sounisi5011--readme-generator (https://github.com/sounisi5011/readme-generator)',\n    },\n);\n\n/**\n * Returns a list of tags in a remote repository with a syntax similar to the \"git ls-remote\" command\n */\nexport async function fetchTagsByApi(gitInfo: GitHost): Promise<string[]> {\n    if (gitInfo.type === 'github') {\n        /**\n         * @see https://developer.github.com/v3/git/refs/\n         * @see https://stackoverflow.com/a/18999865/4907315\n         * Note: Supposedly, GitHub's username and repository name are URL-Safe.\n         */\n        const stream = await githubApi(`/repos/${gitInfo.user}/${gitInfo.project}/git/refs/tags`)\n            .catch(async error => {\n                throw await bentErrorFixer(error);\n            });\n        const data = await stream.json();\n        if (!Array.isArray(data)) {\n            throw new Error(`The GitHub API returned a invalid JSON value: ${inspectValue(data, { depth: 0 })}`);\n        }\n        return data.map((dataItem, index) => {\n            let errorMessage = `The GitHub API returned a invalid JSON value at index ${index}: ${\n                inspectValue(dataItem, { depth: 0 })\n            }`;\n            do {\n                if (!isObject(dataItem)) break;\n                const { ref, object } = dataItem;\n                if (!(typeof ref === 'string' && isObject(object))) break;\n                const { sha } = object;\n                if (!(typeof sha === 'string')) {\n                    errorMessage = `The GitHub API returned a invalid JSON value at property [${index}].object: ${\n                        inspectValue(object, { depth: 0 })\n                    }`;\n                    break;\n                }\n                return `${sha}  ${ref}`;\n            } while (false);\n            throw new Error(errorMessage);\n        });\n    } else if (gitInfo.type === 'gitlab') {\n        // TODO\n    } else if (gitInfo.type === 'bitbucket') {\n        // TODO\n    } else if (gitInfo.type === 'gist') {\n        // TODO\n    }\n    throw new Error(`The API to get tags of type \"${gitInfo.type}\" is not yet supported`);\n}\n\nexport async function fetchReleasedVersions(gitInfo: GitHost): Promise<Versions> {\n    try {\n        // Note: I tried this on a repository on GitHub.\n        //     Apparently, the REST API is faster to fetch than the \"git ls-remote\" command.\n        //     Therefore, this code first tries to get at the REST API.\n        return gitLinesToRevs(await fetchTagsByApi(gitInfo)).versions;\n    } catch (error) {\n        if (/^HTTP 404$/m.test(error.message)) throw error;\n\n        try {\n            return (await gitRevs(gitInfo.sshurl())).versions;\n        } catch (error) {\n            throw npmcliGitErrorFixer(error);\n        }\n    }\n}\n\nexport async function equalsGitTagAndCommit(\n    gitInfo: GitHost,\n    tagData: Versions[string],\n    commitSHA1: string,\n): Promise<boolean> {\n    if (tagData.sha === commitSHA1) return true;\n\n    try {\n        const { stdout } = await gitSpawn(['show-ref', tagData.ref, '--dereference']);\n        if (\n            [tagData.sha, commitSHA1].every(sha1 => new RegExp(String.raw`^${sha1}(?![\\r\\n])\\s`, 'm').test(stdout))\n        ) {\n            return true;\n        }\n    } catch {\n        //\n    }\n\n    if (gitInfo.type === 'github') {\n        /**\n         * @see https://developer.github.com/v3/git/tags/#get-a-tag\n         * Note: Supposedly, GitHub's username and repository name are URL-Safe.\n         */\n        const stream = await githubApi(`/repos/${gitInfo.user}/${gitInfo.project}/git/tags/${tagData.sha}`)\n            .catch(async error => {\n                throw await bentErrorFixer(error);\n            });\n\n        const data = await stream.json();\n        if (!isObject(data)) {\n            throw new Error(`The GitHub API returned a invalid JSON value: ${inspectValue(data, { depth: 0 })}`);\n        }\n        if (data.sha !== tagData.sha) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"sha\" property: ${\n                    inspectValue(data.sha, { depth: 0 })\n                }`,\n            );\n        }\n        if (!isObject(data.object)) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"object\" property: ${\n                    inspectValue(data.object, { depth: 0 })\n                }`,\n            );\n        }\n        if (!(typeof data.object.sha === 'string')) {\n            throw new Error(\n                `The GitHub API returned a invalid JSON value at \"object.sha\" property: ${\n                    inspectValue(data.object.sha, { depth: 0 })\n                }`,\n            );\n        }\n\n        return data.object.sha === commitSHA1;\n    } else if (gitInfo.type === 'gitlab') {\n        // TODO\n    } else if (gitInfo.type === 'bitbucket') {\n        // TODO\n    } else if (gitInfo.type === 'gist') {\n        // TODO\n    }\n\n    throw new Error(`The API to get tag data of type \"${gitInfo.type}\" is not yet supported`);\n}\n"]}
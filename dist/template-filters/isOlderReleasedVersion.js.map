{"version":3,"file":"isOlderReleasedVersion.js","sourceRoot":"","sources":["../../src/template-filters/isOlderReleasedVersion.ts"],"names":[],"mappings":";;;AAEA,SAAgB,yBAAyB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAIvC;IAED,OAAO,KAAK,UAAU,sBAAsB,CAAC,OAAe;QACxD,MAAM,cAAc,GAAG,MAAM,iBAAiB,EAAE,CAAC;QACjD,IAAI,CAAC,cAAc;YAAE,OAAO,IAAI,CAAC;QAEjC,MAAM,gBAAgB,GAAG,MAAM,mBAAmB,EAAE,CAAC;QACrD,IAAI,CAAC,gBAAgB;YAAE,OAAO,IAAI,CAAC;QAEnC,MAAM,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU;YAAE,OAAO,KAAK,CAAC;QAE9B,OAAO,CAAC,MAAM,UAAU,CAAC,eAAe,EAAE,CAAC,KAAK,cAAc,CAAC;IACnE,CAAC,CAAC;AACN,CAAC;AAnBD,8DAmBC","sourcesContent":["import type { ReleasedVersions } from '../utils/repository';\n\nexport function isOlderReleasedVersionGen(\n    { getHeadCommitSha1, getReleasedVersions }: {\n        getHeadCommitSha1: () => Promise<string | null>;\n        // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n        getReleasedVersions: () => Promise<void | ReleasedVersions>;\n    },\n) {\n    return async function isOlderReleasedVersion(version: string): Promise<boolean | null> {\n        const headCommitSha1 = await getHeadCommitSha1();\n        if (!headCommitSha1) return null;\n\n        const releasedVersions = await getReleasedVersions();\n        if (!releasedVersions) return null;\n\n        const versionTag = releasedVersions.get(version);\n        if (!versionTag) return false;\n\n        return (await versionTag.fetchCommitSHA1()) !== headCommitSha1;\n    };\n}\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport * as git from '@npmcli/git';\nimport { cac } from 'cac';\nimport * as fs from 'fs';\nimport { getGitRoot } from 'get-roots';\nimport * as nunjucks from 'nunjucks';\nimport * as path from 'path';\nimport * as util from 'util';\n\nimport { isObject } from './utils';\n\nimport hostedGitInfo = require('hosted-git-info');\nimport execa = require('execa');\nimport matter = require('gray-matter');\nimport npmPath = require('npm-path');\nimport npa = require('npm-package-arg');\n\nconst readFileAsync = util.promisify(fs.readFile);\nconst writeFileAsync = util.promisify(fs.writeFile);\n\nfunction isStringArray(value: unknown): value is string[] {\n    return Array.isArray(value) && value.every(v => typeof v === 'string');\n}\n\nfunction copyRegExp(\n    sourceRegExp: RegExp,\n    { addFlags = '', deleteFlags = '' }: { addFlags?: string; deleteFlags?: string } = {},\n): RegExp {\n    return new RegExp(\n        sourceRegExp.source,\n        (\n            sourceRegExp.flags\n                .replace(/./g, char => deleteFlags.includes(char) ? '' : char)\n        ) + addFlags,\n    );\n}\n\nfunction catchError<TValue>(callback: () => TValue): TValue | undefined;\nfunction catchError<TValue, TDefault>(callback: () => TValue, defaultValue: TDefault): TValue | TDefault;\nfunction catchError<TValue, TDefault = undefined>(callback: () => TValue, defaultValue?: TDefault): TValue | TDefault {\n    try {\n        return callback();\n    } catch (_) {\n        return defaultValue as TDefault;\n    }\n}\n\nfunction getLinesStartPos(text: string): number[] {\n    const lineBreakRegExp = /\\r\\n?|\\n/g;\n    const lineStartPosList = [0];\n    for (let match; (match = lineBreakRegExp.exec(text));) {\n        lineStartPosList.push(match.index + match[0].length);\n    }\n    return lineStartPosList;\n}\n\nfunction strPos2lineNum(lineStartPosList: readonly number[], strPos: number): number {\n    return (\n        lineStartPosList.findIndex((lineStartPos, index) => {\n            const nextLineStartPos = lineStartPosList[index + 1] ?? Infinity;\n            return lineStartPos <= strPos && strPos < nextLineStartPos;\n        })\n    ) + 1;\n}\n\nasync function tryReadFile(filepath: string): Promise<Buffer | undefined> {\n    return readFileAsync(filepath).catch(() => undefined);\n}\n\nfunction tryRequire(filepath: string): unknown {\n    return catchError(() => require(path.resolve(filepath)));\n}\n\nfunction errorMsgTag(template: TemplateStringsArray, ...substitutions: unknown[]): string {\n    return template\n        .map((str, index) =>\n            index === 0\n                ? str\n                : (\n                    util.inspect(substitutions[index - 1], {\n                        depth: 0,\n                        breakLength: Infinity,\n                        maxArrayLength: 5,\n                    })\n                ) + str\n        )\n        .join('');\n}\n\nfunction omitPackageScope(packageName: string): string;\nfunction omitPackageScope(packageName: undefined): undefined;\nfunction omitPackageScope(packageName: string | undefined): string | undefined;\nfunction omitPackageScope(packageName: string | undefined): string | undefined {\n    return packageName?.replace(/^@[^/]+\\//, '');\n}\n\n// ----- //\n\nconst cwd = process.cwd();\nconst cwdRelativePath = path.relative.bind(path, cwd);\n\nconst nunjucksTags = [import('./template-tags/setProp')];\n\nconst nunjucksFilters = {\n    omitPackageScope(packageName: unknown): string {\n        if (typeof packageName !== 'string') {\n            throw new TypeError(errorMsgTag`Invalid packageName value: ${packageName}`);\n        }\n        return omitPackageScope(packageName);\n    },\n    npmURL(packageData: unknown): string {\n        do {\n            if (typeof packageData === 'string') {\n                const result = catchError(() => npa(packageData.trim()));\n                if (!result) break;\n                if (result.type === 'tag' || result.type === 'version') {\n                    return result.rawSpec\n                        ? `https://www.npmjs.com/package/${result.name}/v/${result.rawSpec}`\n                        : `https://www.npmjs.com/package/${result.name}`;\n                }\n            } else if (isObject(packageData)) {\n                if (packageData.name && packageData.version) {\n                    return `https://www.npmjs.com/package/${packageData.name}/v/${packageData.version}`;\n                }\n            }\n        } while (false);\n        throw new TypeError(errorMsgTag`Invalid packageData value: ${packageData}`);\n    },\n    async execCommand(command: unknown): Promise<string> {\n        const $PATH = await new Promise<string>((resolve, reject) => {\n            npmPath.get((error, $PATH) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve($PATH);\n                }\n            });\n        });\n        const options: execa.Options = {\n            all: true,\n            env: { [npmPath.PATH]: $PATH },\n        };\n        let proc: execa.ExecaChildProcess | undefined;\n        if (typeof command === 'string') {\n            proc = execa.command(command, options);\n        } else if (isStringArray(command)) {\n            const [file, ...args] = command;\n            proc = execa(file, args, options);\n        }\n        if (!proc) {\n            throw new TypeError(errorMsgTag`Invalid command value: ${command}`);\n        }\n\n        const result = await proc;\n        return result.all || result.stdout;\n    },\n    linesSelectedURL: (() => {\n        interface RepoData {\n            repoType: hostedGitInfo.Hosts;\n            fileFullpath: string;\n            browseURL: string;\n        }\n\n        interface Options {\n            start: RegExp;\n            end?: RegExp;\n        }\n\n        function isRepoData(value: unknown): value is RepoData {\n            return (\n                isObject(value)\n                && typeof value.repoType === 'string'\n                && typeof value.fileFullpath === 'string'\n                && typeof value.browseURL === 'string'\n            );\n        }\n\n        function isOptions(value: unknown): value is Options {\n            return (\n                isObject(value)\n                && value.start instanceof RegExp\n                && (value.end instanceof RegExp || value.end === undefined)\n            );\n        }\n\n        const cacheStore = new Map<\n            string,\n            { content: string; lineStartPosList: number[] }\n        >();\n\n        return async (repoData: unknown, options: unknown): Promise<string> => {\n            if (!isRepoData(repoData)) {\n                throw new TypeError(errorMsgTag`Invalid repoData value: ${repoData}`);\n            }\n            if (!(options instanceof RegExp || isOptions(options))) {\n                throw new TypeError(errorMsgTag`Invalid options value: ${options}`);\n            }\n            const startLineRegExp = copyRegExp(\n                options instanceof RegExp ? options : options.start,\n                { deleteFlags: 'gy' },\n            );\n            const endLineRegExp = options instanceof RegExp\n                ? null\n                : options.end && copyRegExp(options.end, { deleteFlags: 'gy' });\n            const isFullMatchMode = options instanceof RegExp;\n\n            const fileFullpath = path.resolve(repoData.fileFullpath);\n            let fileData = cacheStore.get(fileFullpath);\n            if (!fileData) {\n                const fileContent = await readFileAsync(cwdRelativePath(fileFullpath), 'utf8');\n                fileData = {\n                    content: fileContent,\n                    lineStartPosList: getLinesStartPos(fileContent),\n                };\n            }\n            const { content: fileContent, lineStartPosList } = fileData;\n\n            const [startLineNumber, endLineNumber] = lineStartPosList.reduce(\n                (\n                    [startLineNumber, endLineNumber, triedMatch],\n                    lineStartPos,\n                    index,\n                ) => {\n                    const currentLineNumber = index + 1;\n                    const isTryStartLineMatching = !startLineNumber\n                        && (!startLineRegExp.multiline || !triedMatch.start);\n                    const isTryEndLineMatching = endLineRegExp\n                        && !endLineNumber\n                        && (!endLineRegExp.multiline || !triedMatch.end);\n\n                    if (isTryStartLineMatching || isTryEndLineMatching) {\n                        const text = fileContent.substring(lineStartPos);\n\n                        if (isTryStartLineMatching) {\n                            const match = startLineRegExp.exec(text);\n                            triedMatch.start = true;\n\n                            if (match) {\n                                const matchStartPos = lineStartPos + match.index;\n                                const matchEndPos = matchStartPos + match[0].length;\n                                if (isFullMatchMode) {\n                                    startLineNumber = strPos2lineNum(lineStartPosList, matchStartPos);\n                                    endLineNumber = strPos2lineNum(lineStartPosList, matchEndPos);\n                                } else {\n                                    startLineNumber = strPos2lineNum(lineStartPosList, matchEndPos);\n                                }\n                            }\n                        }\n                        if (\n                            endLineRegExp\n                            && isTryEndLineMatching\n                            && startLineNumber\n                            && startLineNumber <= currentLineNumber\n                        ) {\n                            const match = endLineRegExp.exec(text);\n                            triedMatch.end = true;\n\n                            if (match) {\n                                const matchEndPos = lineStartPos + match.index + match[0].length;\n                                endLineNumber = strPos2lineNum(lineStartPosList, matchEndPos);\n                            }\n                        }\n                    }\n\n                    return [startLineNumber, endLineNumber, triedMatch];\n                },\n                [0, 0, { start: false, end: false }],\n            );\n            if (!startLineNumber) {\n                throw new Error(\n                    errorMsgTag`RegExp does not match with ${\n                        cwdRelativePath(fileFullpath)\n                    } contents. The following pattern was passed in`\n                        + (options instanceof RegExp\n                            ? errorMsgTag` the argument: ${startLineRegExp}`\n                            : errorMsgTag` the options.start argument: ${startLineRegExp}`),\n                );\n            }\n            if (endLineRegExp && !endLineNumber) {\n                throw new Error(\n                    errorMsgTag`RegExp does not match with ${cwdRelativePath(fileFullpath)} contents.`\n                        + errorMsgTag` The following pattern was passed in the options.end argument: ${endLineRegExp}`,\n                );\n            }\n\n            let browseURLSuffix;\n            const isMultiLine = endLineNumber && startLineNumber !== endLineNumber;\n            if (repoData.repoType === 'github') {\n                browseURLSuffix = isMultiLine\n                    ? `#L${startLineNumber}-L${endLineNumber}`\n                    : `#L${startLineNumber}`;\n            } else if (repoData.repoType === 'gitlab') {\n                browseURLSuffix = isMultiLine\n                    ? `#L${startLineNumber}-${endLineNumber}`\n                    : `#L${startLineNumber}`;\n            } else if (repoData.repoType === 'bitbucket') {\n                browseURLSuffix = isMultiLine\n                    ? `#lines-${startLineNumber}:${endLineNumber}`\n                    : `#lines-${startLineNumber}`;\n            } else if (repoData.repoType === 'gist') {\n                browseURLSuffix = isMultiLine\n                    ? `-L${startLineNumber}-L${endLineNumber}`\n                    : `-L${startLineNumber}`;\n            } else {\n                throw new Error(errorMsgTag`Unknown repoData.repoType value: ${repoData.repoType}`);\n            }\n\n            return repoData.browseURL + browseURLSuffix;\n        };\n    })(),\n};\n\ntype nunjucksRenderStringArgs = Parameters<ReturnType<typeof nunjucks.configure>['renderString']>;\nasync function renderNunjucks(\n    templateCode: nunjucksRenderStringArgs[0],\n    templateContext: nunjucksRenderStringArgs[1],\n    nunjucksFilters: Record<\n        string,\n        (...args: [unknown, ...unknown[]]) => unknown\n    >,\n): Promise<string> {\n    const nunjucksEnv = nunjucks.configure(cwd, {\n        autoescape: false,\n        throwOnUndefined: true,\n    });\n\n    (await Promise.all(nunjucksTags)).forEach(extension => {\n        const ExtensionClass = typeof extension === 'function' ? extension : extension.default;\n        nunjucksEnv.addExtension(ExtensionClass.name, new ExtensionClass());\n    });\n\n    Object.entries(nunjucksFilters).forEach(([filterName, filterFunc]) => {\n        nunjucksEnv.addFilter(\n            filterName,\n            (...args) => {\n                const callback = args.pop();\n                (async () => filterFunc(args.shift(), ...args))()\n                    .then(\n                        value => callback(null, value),\n                        error => {\n                            if (error instanceof Error) {\n                                error.message = `${filterName}() filter / ${error.message}`;\n                            }\n                            return Promise.reject(error);\n                        },\n                    )\n                    .catch(callback);\n            },\n            true,\n        );\n    });\n\n    type renderStringReturnType = Parameters<Exclude<nunjucksRenderStringArgs[2], undefined>>[1];\n    const generateText = await new Promise<renderStringReturnType>(\n        (resolve, reject) => {\n            nunjucksEnv.renderString(\n                templateCode,\n                templateContext,\n                (error, result) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve(result);\n                    }\n                },\n            );\n        },\n    );\n    if (typeof generateText !== 'string') {\n        throw new Error(\n            'Nunjucks render failed: nunjucks.Environment#renderString() method returned a non-string value',\n        );\n    }\n\n    return generateText;\n}\n\nasync function main({ template, test }: { template: string; test: true | undefined }): Promise<void> {\n    const packageRootFullpath = cwd;\n    const templateFullpath = path.resolve(packageRootFullpath, template);\n    const destDirFullpath = packageRootFullpath;\n    const templateCodeWithFrontmatter = await readFileAsync(cwdRelativePath(templateFullpath), 'utf8');\n    const templateContext = {};\n\n    const pkgFileFullpath = path.resolve(packageRootFullpath, 'package.json');\n    const pkg = tryRequire(pkgFileFullpath);\n    if (!isObject(pkg)) {\n        console.error(errorMsgTag`Failed to read file ${cwdRelativePath(pkgFileFullpath)}`);\n    } else {\n        Object.assign(templateContext, { pkg });\n\n        const version = typeof pkg.version === 'string' ? pkg.version : '';\n        const repositoryURL = typeof pkg.repository === 'string'\n            ? pkg.repository\n            : isObject(pkg.repository) && typeof pkg.repository.url === 'string'\n            ? pkg.repository.url\n            : '';\n        const gitInfo = hostedGitInfo.fromUrl(repositoryURL);\n        if (!gitInfo) {\n            console.error(\n                `Failed to detect remote repository. `\n                    + (pkg.repository === undefined\n                        ? errorMsgTag`'repository' field does not exist in ${cwdRelativePath(pkgFileFullpath)} file.`\n                        : errorMsgTag`Unknown structure of 'repository' field in ${\n                            cwdRelativePath(pkgFileFullpath)\n                        } file: ${pkg.repository}`),\n            );\n        } else {\n            interface CommitIshKeywordArguments {\n                committish?: string;\n                commit?: string;\n                branch?: string;\n                tag?: string;\n            }\n            const getCommittish = (kwargs: CommitIshKeywordArguments): string | undefined => {\n                for (const prop of ['committish', 'commit', 'branch', 'tag'] as const) {\n                    if (typeof kwargs[prop] === 'string' && kwargs[prop]) {\n                        return kwargs[prop];\n                    }\n                }\n                return undefined;\n            };\n\n            const gitRootPath = catchError(() => getGitRoot(packageRootFullpath), packageRootFullpath);\n            const [remoteReleasedVersions, headCommitSha1] = await Promise.all([\n                git.revs(gitInfo.sshurl())\n                    .then(({ versions }) => versions)\n                    .catch(() => null),\n                git.spawn(['rev-parse', 'HEAD'])\n                    .then(({ stdout }) => stdout.trim())\n                    .catch(() => null),\n            ]);\n            const isUseVersionBrowseURL = !headCommitSha1\n                || (remoteReleasedVersions\n                    && (!remoteReleasedVersions[version] || remoteReleasedVersions[version].sha === headCommitSha1));\n\n            Object.assign(templateContext, {\n                repo: {\n                    user: gitInfo.user,\n                    project: gitInfo.project,\n                    shortcut(...args: [CommitIshKeywordArguments & { semver?: string }] | []) {\n                        const kwargs = args.pop() || {};\n                        const committish = getCommittish(kwargs) || (kwargs.semver ? `semver:${kwargs.semver}` : '');\n                        return gitInfo.shortcut({ committish });\n                    },\n                    isReleasedVersion(version: string): boolean | null {\n                        if (!remoteReleasedVersions) return null;\n                        return Boolean(remoteReleasedVersions[version]);\n                    },\n                    isOlderReleasedVersion(version: string): boolean | null {\n                        if (!headCommitSha1) return false;\n                        if (!remoteReleasedVersions) return null;\n                        if (!remoteReleasedVersions[version]) return false;\n                        return remoteReleasedVersions[version].sha !== headCommitSha1;\n                    },\n                },\n            });\n\n            Object.assign(nunjucksFilters, {\n                repoBrowseURL(filepath: unknown, options: unknown = {}) {\n                    if (typeof filepath !== 'string') {\n                        throw new TypeError(errorMsgTag`Invalid filepath value: ${filepath}`);\n                    }\n                    if (!isObject(options)) {\n                        throw new TypeError(errorMsgTag`Invalid options value: ${options}`);\n                    }\n\n                    const fileFullpath = /^\\.{1,2}\\//.test(filepath)\n                        ? path.resolve(path.dirname(templateFullpath), filepath)\n                        : path.resolve(gitRootPath, filepath.replace(/^[/]+/g, ''));\n                    const gitRepoPath = path.relative(gitRootPath, fileFullpath);\n\n                    const committish = getCommittish(options)\n                        || (version && isUseVersionBrowseURL ? `v${version}` : '');\n                    const browseURL = gitInfo.browse(gitRepoPath, { committish });\n                    return {\n                        repoType: gitInfo.type,\n                        gitRepoPath,\n                        browseURL,\n                        fileFullpath,\n                        toString() {\n                            return browseURL;\n                        },\n                    };\n                },\n            });\n        }\n    }\n\n    const pkgLockFileFullpath = path.resolve(packageRootFullpath, 'package-lock.json');\n    const pkgLock = tryRequire(pkgLockFileFullpath);\n    if (!isObject(pkgLock)) {\n        console.error(errorMsgTag`Failed to read file ${cwdRelativePath(pkgLockFileFullpath)}`);\n    } else {\n        const { dependencies } = pkgLock;\n        if (!isObject(dependencies)) {\n            console.error(\n                errorMsgTag`Failed to read npm lockfile ${\n                    cwdRelativePath(pkgLockFileFullpath)\n                }. Reason: Invalid structure where 'dependencies' field does not exist.`,\n            );\n        } else {\n            interface DepsRecord {\n                [pkgName: string]: {\n                    name: string;\n                    version: string;\n                    v: string;\n                };\n            }\n            const deps = Object.entries(dependencies)\n                .reduce<DepsRecord>((deps, [pkgName, pkgData]) => {\n                    if (isObject(pkgData) && typeof pkgData.version === 'string') {\n                        deps[pkgName] = {\n                            name: pkgName,\n                            version: pkgData.version,\n                            v: pkgData.version,\n                        };\n                    }\n                    return deps;\n                }, {});\n            Object.assign(templateContext, { deps });\n        }\n    }\n\n    const generateFileFullpath = path.resolve(destDirFullpath, 'README.md');\n    const { content: templateCode, data: templateData } = matter(templateCodeWithFrontmatter);\n    Object.assign(templateContext, templateData);\n    const generateText = await renderNunjucks(\n        templateCode,\n        templateContext,\n        nunjucksFilters,\n    );\n\n    if (test) {\n        const origReadmeContent = await tryReadFile(generateFileFullpath);\n        if (origReadmeContent && !origReadmeContent.equals(Buffer.from(generateText))) {\n            const templateFilename = cwdRelativePath(templateFullpath);\n            const generateFilename = cwdRelativePath(generateFileFullpath);\n            throw new Error(\n                `Do not edit '${generateFilename}' manually! You MUST edit '${templateFilename}' instead of '${generateFilename}'`,\n            );\n        }\n    } else {\n        await writeFileAsync(cwdRelativePath(generateFileFullpath), generateText);\n    }\n}\n\n(() => {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const PKG: unknown = require('../package.json');\n\n    let pkgName: string | undefined;\n    let pkgVersion: string | undefined;\n    let pkgDescription = '';\n    if (isObject(PKG)) {\n        if (typeof PKG.name === 'string') pkgName = PKG.name;\n        if (typeof PKG.version === 'string') pkgVersion = PKG.version;\n        if (typeof PKG.description === 'string') pkgDescription = PKG.description;\n    }\n\n    const cli = cac(omitPackageScope(pkgName));\n    if (pkgVersion) cli.version(pkgVersion, '-V, -v, --version');\n    cli.help(\n        pkgDescription\n            ? sections => {\n                sections.splice(1, 0, { body: pkgDescription });\n            }\n            : undefined,\n    );\n\n    cli.option('--template <file>', 'Nunjucks template file path', { default: 'readme-template.njk' });\n    cli.option('--test', 'Test if README.md file is overwritten');\n\n    if (cli.commands.length <= 0) cli.usage('[options]');\n\n    const { options } = cli.parse();\n\n    if (options.version || options.help) return;\n\n    const unknownOptions = Object.keys(options)\n        .filter(name => name !== '--' && !cli.globalCommand.hasOption(name));\n    if (unknownOptions.length > 0) {\n        process.exitCode = 1;\n        console.error(\n            `unknown ${unknownOptions.length > 1 ? 'options' : 'option'}: ${\n                unknownOptions\n                    .map(name => /^[^-]$/.test(name) ? `-${name}` : `--${name}`)\n                    .join(' ')\n            }\\nTry \\`${cli.name} --help\\` for valid options.`,\n        );\n        return;\n    }\n\n    main({\n        template: options.template,\n        test: options.test,\n    }).catch(error => {\n        process.exitCode = 1;\n        console.error(error instanceof Error ? error.message : error);\n    });\n})();\n"]}
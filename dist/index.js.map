{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAEA,6BAA0B;AAE1B,iCAA8B;AAC9B,0EAA2E;AAC3E,mCAAmC;AAEnC,WAAW;AAEX,CAAC,GAAG,EAAE;IACF,8DAA8D;IAC9D,MAAM,GAAG,GAAY,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEhD,IAAI,OAA2B,CAAC;IAChC,IAAI,UAA8B,CAAC;IACnC,IAAI,cAAc,GAAG,EAAE,CAAC;IACxB,IAAI,gBAAQ,CAAC,GAAG,CAAC,EAAE;QACf,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ;YAAE,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;QACrD,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,QAAQ;YAAE,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC;QAC9D,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,QAAQ;YAAE,cAAc,GAAG,GAAG,CAAC,WAAW,CAAC;KAC7E;IAED,MAAM,GAAG,GAAG,SAAG,CAAC,uCAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/C,IAAI,UAAU;QAAE,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IAC7D,GAAG,CAAC,IAAI,CACJ,cAAc;QACV,CAAC,CAAC,QAAQ,CAAC,EAAE;YACT,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;QACpD,CAAC;QACD,CAAC,CAAC,SAAS,CAClB,CAAC;IAEF,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,6BAA6B,EAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IACnG,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAC;IAE9D,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;QAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAErD,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;IAEhC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI;QAAE,OAAO;IAE5C,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACtC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3B,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;QACrB,OAAO,CAAC,KAAK,CACT,WAAW,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,KACvD,cAAc;aACT,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;aAC3D,IAAI,CAAC,GAAG,CACjB,WAAW,GAAG,CAAC,IAAI,8BAA8B,CACpD,CAAC;QACF,OAAO;KACV;IAED,WAAI,CAAC;QACD,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;KACrB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACb,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;QACrB,OAAO,CAAC,KAAK,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,EAAE,CAAC","sourcesContent":["#!/usr/bin/env node\n\nimport { cac } from 'cac';\n\nimport { main } from './main';\nimport { omitPackageScopeName } from './template-filters/omitPackageScope';\nimport { isObject } from './utils';\n\n// ----- //\n\n(() => {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const PKG: unknown = require('../package.json');\n\n    let pkgName: string | undefined;\n    let pkgVersion: string | undefined;\n    let pkgDescription = '';\n    if (isObject(PKG)) {\n        if (typeof PKG.name === 'string') pkgName = PKG.name;\n        if (typeof PKG.version === 'string') pkgVersion = PKG.version;\n        if (typeof PKG.description === 'string') pkgDescription = PKG.description;\n    }\n\n    const cli = cac(omitPackageScopeName(pkgName));\n    if (pkgVersion) cli.version(pkgVersion, '-V, -v, --version');\n    cli.help(\n        pkgDescription\n            ? sections => {\n                sections.splice(1, 0, { body: pkgDescription });\n            }\n            : undefined,\n    );\n\n    cli.option('--template <file>', 'Nunjucks template file path', { default: 'readme-template.njk' });\n    cli.option('--test', 'Test if README.md file is overwritten');\n\n    if (cli.commands.length <= 0) cli.usage('[options]');\n\n    const { options } = cli.parse();\n\n    if (options.version || options.help) return;\n\n    const unknownOptions = Object.keys(options)\n        .filter(name => name !== '--' && !cli.globalCommand.hasOption(name));\n    if (unknownOptions.length > 0) {\n        process.exitCode = 1;\n        console.error(\n            `unknown ${unknownOptions.length > 1 ? 'options' : 'option'}: ${\n                unknownOptions\n                    .map(name => /^[^-]$/.test(name) ? `-${name}` : `--${name}`)\n                    .join(' ')\n            }\\nTry \\`${cli.name} --help\\` for valid options.`,\n        );\n        return;\n    }\n\n    main({\n        template: options.template,\n        test: options.test,\n    }).catch(error => {\n        process.exitCode = 1;\n        console.error(error instanceof Error ? error.message : error);\n    });\n})();\n"]}